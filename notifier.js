// notifier.js
const bus = require("./events");
const { prisma } = require("./db");
const { ruMoney } = require("./menus");

/**
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç —Å–ª—É—à–∞—Ç–µ–ª–µ–π –∫ —Å–æ–±—ã—Ç–∏—è–º –æ–ø–ª–∞—Ç—ã –∏ —à–ª—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
 * –í–∞–∂–Ω–æ: —Å—é–¥–∞ –ø–µ—Ä–µ–¥–∞—ë–º bot —Å–Ω–∞—Ä—É–∂–∏ (–Ω–∏–∫–∞–∫–∏—Ö require('./bot') ‚ûú –Ω–µ—Ç —Ü–∏–∫–ª–æ–≤).
 */
function initNotifier(bot) {
  // –£—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞
  bus.on("topup.success", async ({ topupId }) => {
    try {
      const topup = await prisma.topUp.findUnique({ where: { id: topupId } });
      if (!topup) return;

      const user = await prisma.user.findUnique({ where: { id: topup.userId } });
      if (!user?.chatId) {
        console.warn(`[NOTIFY] No chatId for user ${user?.id}`);
        return;
      }

      const text =
        `‚úÖ –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n` +
        `–°—É–º–º–∞: ${ruMoney(topup.amount)}\n` +
        `–ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${ruMoney(user.balance)}`;

      await bot.telegram.sendMessage(user.chatId, text);
      console.log(`[NOTIFY] Success sent to chatId=${user.chatId} for topup=${topupId}`);
    } catch (e) {
      console.error("[NOTIFY] Error sending success:", e);
    }
  });

  // –ù–µ—É—Å–ø–µ—à–Ω–∞—è –æ–ø–ª–∞—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî –ø–æ–ª–µ–∑–Ω–æ –∏–º–µ—Ç—å)
  bus.on("topup.failed", async ({ topupId }) => {
    try {
      const topup = await prisma.topUp.findUnique({ where: { id: topupId } });
      if (!topup) return;

      const user = await prisma.user.findUnique({ where: { id: topup.userId } });
      if (!user?.chatId) return;

      const text =
        `‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞.\n` +
        `–°—É–º–º–∞: ${ruMoney(topup.amount)}\n` +
        `–ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ ‚Äî –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.`;

      await bot.telegram.sendMessage(user.chatId, text);
      console.log(`[NOTIFY] Fail sent to chatId=${user.chatId} for topup=${topupId}`);
    } catch (e) {
      console.error("[NOTIFY] Error sending fail:", e);
    }
  });

  console.log("üîî Notifier attached to payment events");
}

module.exports = { initNotifier };
